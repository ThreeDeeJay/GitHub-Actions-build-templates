#Template from: https://github.com/ThreeDeeJay/GitHub-Actions-build-templates/blob/main/Windows-MSBuild.yml
name: Build

env:
  Branch: ${{github.ref_name}}
  Platform: #Any CPU|Win32|x86|x64 - Check .sln file for available ones
  Configuration: Release
  Artifacts: build/Release/
  Solution: ${{github.event.repository.name}}.sln # .
  Executable: ${{github.event.repository.name}}.exe # *
#  DXSDK_DIR: C:\Program Files (x86)\Microsoft DirectX SDK (June 2010)\

on:
  push:
    Branches: $Branch
  pull_request:
    Branches: $Branch
  workflow_dispatch:

jobs:
  Windows:
    runs-on: windows-latest
    steps:

    - name: Clone repo and submodules
      run: git clone --recurse-submodules https://github.com/${{github.repository}}.git . --branch ${{env.Branch}}

    - name: Get current date, commit hash and count
      run: |
        echo "CommitDate=$(git show -s --date=format:'%Y-%m-%d' --format=%cd)" >> $env:GITHUB_ENV
        echo "CommitHashShort=$(git rev-parse --short=7 HEAD)" >> $env:GITHUB_ENV
        echo "CommitCount=$(git rev-list --count HEAD)" >> $env:GITHUB_ENV

#    - name: Install Windows 8.1 SDK
#      shell: powershell
#      run: |
#        Invoke-WebRequest -Method Get -Uri https://go.microsoft.com/fwlink/p/?LinkId=323507 -OutFile sdksetup.exe -UseBasicParsing
#        Start-Process -Wait sdksetup.exe -ArgumentList "/q", "/norestart", "/features", "OptionId.WindowsDesktopSoftwareDevelopmentKit", "OptionId.NetFxSoftwareDevelopmentKit"
#
#    - name: Install .NET Framework 4.6.1 Developer Pack
#      shell: powershell
#      run: |
#        Invoke-WebRequest -Method Get -Uri https://go.microsoft.com/fwlink/?linkid=2099470 -OutFile ndp461-devpack-kb3105179-enu.exe -UseBasicParsing
#        Start-Process -Wait ./ndp461-devpack-kb3105179-enu.exe -ArgumentList "/Quiet"
#
#    - name: Cache DirectX SDK
#      id: DXSDK_Jun10
#      uses: actions/cache@v4
#      with:
#        path: ${{env.DXSDK_DIR}}
#        key: DXSDK_Jun10
#    - name: Install DirectX SDK
#      if: steps.DXSDK_Jun10.outputs.cache-hit != 'true'
#      shell: powershell
#      run: |
#        Invoke-WebRequest -Method Get -Uri https://download.microsoft.com/download/a/e/7/ae743f1f-632b-4809-87a9-aa1bb3458e31/DXSDK_Jun10.exe -OutFile DXSDK_Jun10.exe -UseBasicParsing
#        Start-Process -Wait ./DXSDK_Jun10.exe -ArgumentList "/U"
#    - name: Set DXSDK_DIR
#      run: echo "DXSDK_DIR=C:\Program Files (x86)\Microsoft DirectX SDK (June 2010)\" >> $env:GITHUB_ENV
#
#    - name: Install Qt
#      uses: jurplel/install-qt-action@v4
#      with:
#        version: '6.6.0'
#        host: 'windows'
#        target: 'desktop'
#        arch: 'win64_msvc2019_64'
#        modules: 'addons.qtmultimedia'

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.Solution}}

    - name: Build
      run: msbuild /m ${{env.Solution}} /p:Configuration="${{env.Configuration}}" #/p:Platform="${{env.Platform}}" /p:IncludePath="C:\Path\to\Include" /p:LibPath="C:\Path\to\Lib" /p:AdditionalIncludePaths="C:\Path\to\external\include" /p:AdditionalLibraryDirectories="C:\Path\to\external\lib" /p:LanguageStandard="stdcpp17"

    - name: List files
      run: ls -R

#    - name: Qt Deploy
#      run: |
#        windeployqt.exe "${{github.workspace}}/${{env.Artifacts}}/${{github.event.repository.name}}.exe"

    - name: Upload Installer Artifact to GitHub
      uses: actions/upload-artifact@v4
      with:
        name: "${{github.event.repository.name}}_r${{env.CommitCount}}@${{env.CommitHashShort}}"
        path: "${{github.workspace}}/${{env.Artifacts}}"

    - name: Compress artifacts
      uses: vimtor/action-zip@v1.1
      with:
        files: '${{env.Artifacts}}'
        dest: "build/${{github.event.repository.name}}_r${{env.CommitCount}}@${{env.CommitHashShort}}.zip"

    - name: GitHub pre-release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{secrets.GITHUB_TOKEN}}"
        automatic_release_tag: "latest"
        prerelease: true
        title: "[${{env.CommitDate}}] ${{github.event.repository.name}} r${{env.CommitCount}}@${{env.CommitHashShort}}"
        files: "build/${{github.event.repository.name}}_r${{env.CommitCount}}@${{env.CommitHashShort}}.zip"

#Errors and solutions:

# error MSB3644: The reference assemblies for .NETFramework,Version=v4.0 were not found. To resolve this, install the Developer Pack (SDK/Targeting Pack) for this framework version or retarget your application. 
# Use runs-on: windows-2019

# error MSB8020: The build tools for Visual Studio 2017 (Platform Toolset = 'v141') cannot be found. To build using the v141 build tools, please install Visual Studio 2017 build tools.  Alternatively, you may upgrade to the current Visual Studio tools by selecting the Project menu or right-click the solution, and then selecting "Retarget solution".  
# Edit .vcproj files and after <PlatformToolset>, set v142 if using runner windows-2019 or v143 for windows-2022/latest
